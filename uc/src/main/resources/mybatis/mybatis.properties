# 主数据源，默认的
spring.datasource.driver-class-name=com.mysql.jdbc.Driver  
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/db  
spring.datasource.username=root  
spring.datasource.password=123456  

# 初始化大小，最小，最大
spring.datasource.initialSize=5  
spring.datasource.minIdle=5  
spring.datasource.maxActive=20  
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000  
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000  
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000  
spring.datasource.validationQuery=SELECT 1 FROM DUAL  
spring.datasource.testWhileIdle=true  
spring.datasource.testOnBorrow=false  
spring.datasource.testOnReturn=false  
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true  
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20  

# 从数据源
spring.slave.type=com.alibaba.druid.pool.DruidDataSource  
spring.slave.driver-class-name=com.mysql.jdbc.Driver  
spring.slave.url=jdbc:mysql://127.0.0.1:3308/db  
spring.slave.username=root  
spring.slave.password=123456  
spring.slave.initialSize=5  
spring.slave.minIdle=5  
spring.slave.maxActive=20  
# 配置获取连接等待超时的时间
spring.slave.maxWait=60000  
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.slave.timeBetweenEvictionRunsMillis=60000  
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.slave.minEvictableIdleTimeMillis=300000  
spring.slave.validationQuery=SELECT 1 FROM DUAL  
spring.slave.testWhileIdle=true  
spring.slave.testOnBorrow=false  
spring.slave.testOnReturn=false  
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.slave.poolPreparedStatements=true  
spring.slave.maxPoolPreparedStatementPerConnectionSize=20  


spring.read2.type=com.alibaba.druid.pool.DruidDataSource  
spring.read2.driver-class-name=com.mysql.jdbc.Driver  
spring.read2.url=jdbc:mysql://127.0.0.1:3309/db  
spring.read2.username=root  
spring.read2.password=123456  
spring.read2.initialSize=5  
spring.read2.minIdle=5  
spring.read2.maxActive=20  
# 配置获取连接等待超时的时间
spring.read2.maxWait=60000  
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.read2.timeBetweenEvictionRunsMillis=60000  
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.read2.minEvictableIdleTimeMillis=300000  
spring.read2.validationQuery=SELECT 1 FROM DUAL  
spring.read2.testWhileIdle=true  
spring.read2.testOnBorrow=false  
spring.read2.testOnReturn=false  
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.read2.poolPreparedStatements=true  
spring.read2.maxPoolPreparedStatementPerConnectionSize=20  

# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,logback  
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000  
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true  

# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.slave.filters=stat,wall,logback  
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.slave.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000  
# 合并多个DruidDataSource的监控数据
spring.slave.useGlobalDataSourceStat=true  

# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.read2.filters=stat,wall,logback  
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.read2.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000  
# 合并多个DruidDataSource的监控数据
spring.read2.useGlobalDataSourceStat=true 